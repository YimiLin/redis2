<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--1、引入jdbc参数文件-->
    <context:property-placeholder location="classpath:properties/jdbc.properties" ignore-unresolvable="true"/>
    <!--2、配置spring运行要扫描的包,配合自动注入这个注解，完成spring的装载功能-->
    <context:component-scan base-package="com.gs.service.*"/>
    <!--3、配置数据源 -->
    <bean name="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.driverUrl}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="initialSize" value="${druid.initialSize}"/>
        <property name="maxActive" value="${druid.maxActive}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxWait" value="${druid.maxWait}"/>
        <property name="validationQuery" value="${druid.validationQuery}"/>
        <property name="testOnBorrow" value="${druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${druid.testOnReturn}"/>
        <property name="testWhileIdle" value="${druid.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}"/>
        <property name="removeAbandoned" value="${druid.removeAbandoned}"/>
        <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}"/>
        <property name="logAbandoned" value="${druid.logAbandoned}"/>
        <property name="filters" value="${druid.filters}"/>
    </bean>
    <!--4、mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源 MyBatis定义数据源,同意加载配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--1、指定数据源-->
        <property name="dataSource" ref="druidDataSource"/>
        <!--2、配置别名-->
        <property name="typeAliasesPackage" value="com.gs.bean"/>
        <!--3、加载映射文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--导入mybatis中setting设置-->
        <!--<property name="configLocation" value="classpath:config/Mybatis-config.xml"></property>-->
    </bean>
    <!--5、mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory-->
    <!--basePackage:指定sql映射文件/接口所在的包（自动扫描）-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--指定映射文件-->
        <property name="basePackage" value="com.gs.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!--6、事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 -->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="druidDataSource"/>
    </bean>
    <!--7、使用声明式事务 transaction-manager：引用上面定义的事务管理器 -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>
</beans>